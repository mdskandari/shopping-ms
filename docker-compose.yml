version: "3"
services:
  nosql-db:
    image: mongo
    ports:
      - "27018:27017"
    container_name: nosql-db
    volumes:
      - 'mongo-db:/data/db'
    networks:
      - shopping_net
  
  messenger:
    image: 'rabbitmq:3.11-management'
    container_name: messenger
    volumes:
      - 'broker:/var/lib/rabbitmq'
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      RABBITMQ_DEFAULT_VHOST: "shopping_online_ms_application"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      timeout: 30s
      retries: 3
    networks:
      - shopping_net

  products:
    build:
      dockerfile: Dockerfile
      context: ./products
    container_name: products
    ports:
      - "8002:8002"
    restart: always
    depends_on:
      - "nosql-db"
      - "messenger"
    volumes:
      - .:/app
      - /app/products/node_modules
    # env_file:
    #   - ./products/.env.dev
    networks:
      - shopping_net

  shopping:
    build:
      dockerfile: Dockerfile
      context: ./shopping
    container_name: shopping
    ports:
      - "8003:8003"
    restart: always
    depends_on:
      - "nosql-db"
      - "messenger"
    volumes:
      - .:/app
      - /app/shopping/node_modules
    # env_file:
    #   - ./shopping/.env
    networks:
      - shopping_net

  customer:
    build:
      dockerfile: Dockerfile
      context: ./customer
    container_name: customer
    ports:
      - "8001:8001"
    restart: always
    depends_on:
      - "nosql-db"
      - "messenger"
    volumes:
      - .:/app/
      - /app/customer/node_modules
    # env_file:
    #   - ./customer/.env
    networks:
      - shopping_net

  # nginx-proxy:
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./proxy
  #   depends_on:
  #     - products
  #     - shopping
  #     - customer
  #   ports:
  #     - 8000:80
  #   networks:
  #     - shopping_net

  nginx-proxy:
    image: 'nginx:1.23.4-alpine'
    container_name: shopping_server
    restart: always
    ports:
      - "8000:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./proxy:/etc/nginx/conf.d
    depends_on:
      - products
      - customer
      - shopping
    networks:
      - shopping_net

volumes:
  broker:
    driver: local
  mongo-db:
    driver: local

networks:
  shopping_net:
    name: shopping_net
    driver: bridge
